# Multi-Language CI/CD Pipeline - Execution Layer
# This workflow implements ONLY the Execution Layer (Just Commands) from the architecture diagram

name: 03 - Execution Layer

# =============================================================================
# EXECUTION LAYER - Just Commands
# =============================================================================

on:
  workflow_run:
    workflows: ["02 - Orchestration Layer"]
    types: [completed]

jobs:
  just-commands:
    name: üöÄ Dynamic Just Commands Execution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Include Maven wrapper files
          fetch-depth: 0
      
      - name: Setup Java with enhanced caching
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          cache-dependency-path: |
            **/pom.xml
            **/build.gradle
            **/gradle.properties
            **/gradle/wrapper/gradle-wrapper.properties
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            target/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - uses: taiki-e/install-action@just
      
      - name: Show available just commands
        run: |
          echo "üìã Available just commands:"
          just --list
          
      - name: Execute core CI commands (required)
        run: |
          echo "üîÑ Executing core CI commands (required)..."
          
          # Core commands that should always run in CI
          CORE_COMMANDS="detect build test clean mvn-validate coverage"
          
          for cmd in $CORE_COMMANDS; do
            if just --list | grep -q "$cmd"; then
              echo "üîÑ Executing: just $cmd"
              just $cmd
              if [ $? -ne 0 ]; then
                echo "‚ùå Core command 'just $cmd' failed - stopping execution"
                exit 1
              fi
            else
              echo "‚ö†Ô∏è  Core command '$cmd' not found, skipping"
            fi
          done
          
      - name: Execute additional CI commands (optional)
        run: |
          echo "üîÑ Executing additional CI commands (optional)..."
          
          # Additional commands that are useful in CI but not critical
          ADDITIONAL_COMMANDS="lint format cyclonedx-report mvn-site"
          
          for cmd in $ADDITIONAL_COMMANDS; do
            if just --list | grep -q "$cmd"; then
              echo "üîÑ Executing: just $cmd"
              just $cmd || echo "‚ö†Ô∏è  Optional command 'just $cmd' failed but continuing..."
            else
              echo "‚ö†Ô∏è  Optional command '$cmd' not found, skipping"
            fi
          done
          
      - name: Execute utility commands (non-critical)
        run: |
          echo "üîÑ Executing utility commands (non-critical)..."
          
          # Utility commands that are informational only
          UTILITY_COMMANDS="status env-info find-java find-resources java-version maven-version count-lines"
          
          for cmd in $UTILITY_COMMANDS; do
            if just --list | grep -q "$cmd"; then
              echo "üîÑ Executing: just $cmd"
              just $cmd || echo "‚ö†Ô∏è  Utility command 'just $cmd' failed but continuing..."
            else
              echo "‚ö†Ô∏è  Utility command '$cmd' not found, skipping"
            fi
          done
          
      - name: Skip development commands (not for CI)
        run: |
          echo "‚è≠Ô∏è  Skipping development commands (not suitable for CI)..."
          
          # Commands that are for local development only
          DEV_COMMANDS="dev-setup dev-status dev-stop db-init-h2 db-reset-h2 db-schema run run-h2 deploy"
          
          for cmd in $DEV_COMMANDS; do
            if just --list | grep -q "$cmd"; then
              echo "‚è≠Ô∏è  Skipping development command: $cmd (not for CI environment)"
            fi
          done
          
      - name: Show just command details
        run: |
          echo "üìã Just command details:"
          echo "Build command:"
          just --show build || echo "No build command found"
          echo ""
          echo "Test command:"
          just --show test || echo "No test command found"
          echo ""
          echo "Clean command:"
          just --show clean || echo "No clean command found"
          
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/
            build/
            *.jar
            *.war
            *.ear
            
  execution-summary:
    name: üìä Execution Summary
    runs-on: ubuntu-latest
    needs: just-commands
    steps:
      - run: |
          echo "üìä EXECUTION LAYER SUMMARY"
          echo "‚úÖ Core CI commands executed successfully"
          echo "‚úÖ Optional commands attempted"
          echo "‚úÖ Development commands skipped appropriately"
          echo "‚úÖ Build artifacts uploaded"
          echo "‚úÖ Pipeline driven by justfile with smart categorization"
