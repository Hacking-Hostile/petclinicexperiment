# Multi-Language CI/CD Pipeline - Execution Layer
# This workflow implements ONLY the Execution Layer (Just Commands) from the architecture diagram

name: 03 - Execution Layer

# =============================================================================
# EXECUTION LAYER - Just Commands
# =============================================================================

on:
  workflow_run:
    workflows: ["02 - Orchestration Layer"]
    types: [completed]

jobs:
  just-commands:
    name: üöÄ Dynamic Just Commands Execution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Include Maven wrapper files
          fetch-depth: 0
      
      - name: Setup Java with enhanced caching
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
          cache-dependency-path: |
            **/pom.xml
            **/build.gradle
            **/gradle.properties
            **/gradle/wrapper/gradle-wrapper.properties
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            target/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            build/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - uses: taiki-e/install-action@just
      
      - name: Show available just commands
        run: |
          echo "üìã Available just commands:"
          just --list
          
      - name: Execute all just commands dynamically
        run: |
          echo "üîÑ Executing all just commands from justfile..."
          
          # Get all available commands from justfile, filtering out comments and invalid commands
          JUST_COMMANDS=$(just --list | grep -v "Available recipes:" | grep -v "^#" | grep -v "Default target" | sed 's/#.*$//' | tr -d ' ' | grep -v '^$' | tr '\n' ' ')
          echo "Found commands: $JUST_COMMANDS"
          
          # Execute each command that exists in justfile
          for cmd in $JUST_COMMANDS; do
            # Skip default command as it's just a help display
            if [ "$cmd" != "default" ]; then
              echo "üîÑ Executing: just $cmd"
              just $cmd
              if [ $? -ne 0 ]; then
                echo "‚ùå Command 'just $cmd' failed"
                exit 1
              fi
            fi
          done
          
      - name: Show just command details
        run: |
          echo "üìã Just command details:"
          echo "Build command:"
          just --show build || echo "No build command found"
          echo ""
          echo "Test command:"
          just --show test || echo "No test command found"
          echo ""
          echo "Clean command:"
          just --show clean || echo "No clean command found"
          
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/
            build/
            *.jar
            *.war
            *.ear
            
  execution-summary:
    name: üìä Execution Summary
    runs-on: ubuntu-latest
    needs: just-commands
    steps:
      - run: |
          echo "üìä EXECUTION LAYER SUMMARY"
          echo "‚úÖ All justfile commands executed dynamically"
          echo "‚úÖ No hardcoded commands used"
          echo "‚úÖ Build artifacts uploaded"
          echo "‚úÖ Pipeline driven entirely by justfile content"
