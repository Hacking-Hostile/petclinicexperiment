# Multi-Language CI/CD Pipeline - Deployment Layer
# This workflow implements ONLY the Deployment Layer from the architecture diagram

name: "05 - Deployment Layer"

on:
  workflow_run:
    workflows: ["04 - Security Layer"]
    types:
      - completed
  # Manual trigger for testing
  workflow_dispatch:

jobs:
  deployment-stage:
    runs-on: ubuntu-latest
    # Allow manual trigger or successful completion of Stage 4
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    
    steps:
      - name: 📋 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Debug workflow trigger
        run: |
          echo "🔍 Debugging workflow trigger..."
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Triggering workflow: ${{ github.event.workflow_run.name }}"
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: 🐳 Setup Docker
        uses: docker/setup-buildx-action@v3
        
      - name: 📋 Setup Just
        uses: taiki-e/install-action@just
        
      - name: 📋 Get Stage 5 commands
        id: get-stage-info
        run: |
          echo "📋 Getting Stage 5 commands..."
          STAGE_INFO=$(just get-stage-info)
          echo "STAGE_INFO<<EOF" >> $GITHUB_OUTPUT
          echo "$STAGE_INFO" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: 🔍 Parse Stage 5 commands
        id: parse-stage-5
        run: |
          echo "🔍 Parsing Stage 5 commands..."
          STAGE_INFO="${{ steps.get-stage-info.outputs.STAGE_INFO }}"
          
          # Extract Stage 5 commands
          STAGE_5_COMMANDS=$(echo "$STAGE_INFO" | grep "^STAGE_5:" | sed 's/STAGE_5://' | tr -d ' ')
          
          if [ -n "$STAGE_5_COMMANDS" ]; then
            echo "✅ Found Stage 5 commands: $STAGE_5_COMMANDS"
            echo "commands=$STAGE_5_COMMANDS" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ No Stage 5 commands found"
            echo "commands=" >> $GITHUB_OUTPUT
          fi
          
      - name: 🐳 Execute Stage 5 commands
        if: steps.parse-stage-5.outputs.commands != ''
        run: |
          echo "🐳 Executing Stage 5 (Deployment) commands..."
          echo "=============================================="
          
          COMMANDS="${{ steps.parse-stage-5.outputs.commands }}"
          
          for cmd in $COMMANDS; do
            if [ -n "$cmd" ]; then
              echo "🔄 Executing: just $cmd"
              just $cmd
              if [ $? -ne 0 ]; then
                echo "❌ Command failed: just $cmd"
                exit 1
              fi
              echo "✅ Command completed: just $cmd"
            fi
          done
          
          echo "✅ All Stage 5 commands completed successfully!"
          
      - name: 📊 Deployment Summary
        run: |
          echo "📊 DEPLOYMENT LAYER SUMMARY"
          echo "============================"
          echo "✅ Stage 5 (Deployment) completed"
          echo "🐳 Docker commands executed successfully"
          echo "🚀 Ready for next stage..."
